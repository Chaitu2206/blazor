name: Build - Docker

on:
  push:
    branches:
      - main
      - release
    tags:
      - v*
    paths-ignore:
      - 'docs/**'
      - '**.md'
  pull_request:

env:
  IMAGE_NAME: blazor
  RUN_ID: ${{ github.run_id }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            VERSION=$(date +%y.%m.%d).$GITHUB_RUN_NUMBER
            docker build . --file ./src/Zindagi/Dockerfile --tag $IMAGE_NAME --build-arg BUILD__VERSION=$VERSION
          fi

  push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: |
          VERSION=$(date +%y.%m.%d).$GITHUB_RUN_NUMBER
          docker build . --file ./src/Zindagi/Dockerfile --tag $IMAGE_NAME --build-arg BUILD__VERSION=$VERSION

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$RUN_ID
          docker push $IMAGE_ID:$RUN_ID

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

